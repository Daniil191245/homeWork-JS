DOM (Document Object Model, Об'єктна модель документа) — міжплатформовий, незалежний від мови інтерфейс для роботи з HTML-документом. містить набір властивостей і методів дозволяють шукати, створювати і видаляти елементи, реагувати на дії користувача і інше.

BOM (Browser Object Model, Об'єктна модель браузера) — міжплатформовий, незалежний від мови інтерфейс для роботи з вікном браузера. Містить набір властивостей і методів дозволяють отримати доступ безпосередньо до поточної вкладки і ряду функцій браузера. Включає об'єкт роботи з історією, місцем розташування та інше.

Відповідно до об’єктної моделі документа (DOM), кожен HTML-тег є об’єктом. Вкладені теги — це “діти” всередині батьківського елементу. Текст всередині тегу також є об’єктом.

Структура
Всі ці об’єкти доступні за допомогою JavaScript, і ми можемо використовувати їх, щоб змінити сторінку.
У цьому дереві виділені два типи вузлів:

Вузли-елементи (element node) — утворюються тегами, природним чином одні вузли вкладені в інші. Структура дерева утворена виключно за рахунок них.
Текстові вузли (text node) — утворюються текстом всередині елементів. Текстовий вузол містить тільки рядок тексту і не може мати нащадків, тобто він завжди на самому нижньому рівні ієрархії. Прогалини і переноси рядків це теж текстові вузли.З цього правила є винятки: прогалини до head ігноруються, а будь-який вміст після body НЕ створює вузла, браузер переносить його в кінець body.


Навігація по DOM
DOM надає широкий спектр можливостей при роботі з HTML-елементом і його вмістом, але для цього спочатку потрібно отримати посилання на елемент. Доступ до DOM починається з об'єкта document, від нього можна дістатися до будь-яких вузлів.
Вузли HTML-дерева мають ієрархічне ставлення один до одного. Терміни ancestor (предок) , descendant (нащадок) , parent (батько) , child (дитина) і sibling (сусід) використовуються для опису відносин.
У дереві вузлів верхній вузол називається кореневим (root node).
Кожен вузол, крім root node, має тільки одного з батьків.
У вузла може бути скільки завгодно дітей.
Сусіди — це вузли із загальним батьком.
Дочірні елементи (діти) — елементи, які лежать безпосередньо всередині даного.
Нащадки — всі елементи, які лежать всередині даного, разом з їхніми дітьми, дітьми їхніх дітей і так далі. Тобто все піддерево.

Ви можете використовувати наступні властивості для навігації між вузлами.
Список нвластивостей:
elem.parentNode — вибере батька elem
elem.childNodes — псевдомасив зберігає всі дочірні елементи, включаючи текстові.
elem.children — псевдомасив зберігає тільки дочірні вузли-елементи, тобто відповідні тегам.
elem.firstChild — вибере перший дочірній елемент всередині elem, включаючи текстові вузли.
elem.firstElementChild — вибере перший дочірній вузол-елемент всередині elem.
elem.lastChild — вибере останній дочірній елемент всередині elem, включаючи текстові вузли.
elem.lastElementChild — вибере останній дочірній вузол-елемент всередині elem.
elem.previousSibling — вибере елемент "зліва" від elem (його попереднього сусіда)
elem.previousElementSibling - вибере вузол-елемент "зліва" від elem (його попереднього сусіда)
elem.nextSibling — вибере елемент "справа" від elem (його наступного сусіда)
elem.nextElementSibling — вибере вузол-елемент "справа" від elem (його попереднього сусіда)
